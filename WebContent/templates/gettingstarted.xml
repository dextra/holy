<engine>
	<template selector="#content">
		<h2>Getting Started</h2>
		<div class="toggle">
			<h3>
				<span>Exemplo</span>
			</h3>
			<div>
				<p>Segue passo a passo como fazer uma apliação Single Page usando
					Holy que envia e lê dados do servidor utilizando JSON.
				</p>
				<p>Para isso vamos usar um serviço do facebook que retorna algumas
					informações a partir do user name ou do ID interno.
				</p>
				<p>
					Vamos user o serviço do facebook https://graph.facebook.com/
					<span class="highlight">id-or-username</span>
					, exemplo:
				</p>
				<p>
					<a href="https://graph.facebook.com/facebook">https://graph.facebook.com/facebook</a>
				</p>
				<p>
					<a href="https://graph.facebook.com/pyrata.murer">https://graph.facebook.com/pyrata.murer</a>
				</p>
			</div>
		</div>
		<h3>
			<span>Passo a passo</span>
		</h3>
		<div class="steps">
			<div class="toggle">
				<h3>
					<span>Linkando os arquivos do holy e suas dependencias</span>
				</h3>
				<div class="step-link type-html">
					<pre class="snippet"></pre>
				</div>
			</div>
			<div class="toggle">
				<h3>
					<span>Criando formulário</span>
				</h3>
				<div class="step-form type-html">
					<pre class="snippet"></pre>
				</div>
			</div>
			<div class="toggle">
				<h3>
					<span>Preparando componentes ao carregar a página</span>
				</h3>
				<div class="step-prepare type-js">
					<pre class="snippet"></pre>
				</div>
			</div>
			<div class="toggle">
				<h3>
					<span>Realizando busca no facebook</span>
				</h3>
				<div class="step-fbrequest type-js">
					<pre class="snippet"></pre>
				</div>
			</div>
			<div class="toggle">
				<h3>
					<span>Arquivo completo</span>
				</h3>
				<div class="step-complete type-html">
					<pre class="snippet"></pre>
				</div>
			</div>
		</div>
	</template>
	<script>
		<![CDATA[
			$('#content .steps .toggle > div').hide();
			$('#content .toggle').togglePanel();
	
			var print = function(text, line) {
				var id = text[line].replace(/^.*==== start | ====.*$/g, '');
				id = $.trim(id);
				var target = $('#content .step-' + id);
				var c = '';
				while(true) {
					var l = text[++line];
					if(l.indexOf('====') >= 0) {
						break;
					}
					c = c + l + '\n';
				}
				target.find('pre').text(c);
			}
			
			$.ajax({
				url: 'example.html',
				dataType: 'text',
				success: function(text) {
					var xml = $($.parseXML(text));
					xml.find('[src],[href]').each(function() {
					     var value = $(this).attr('src') ||  $(this).attr('href');
					     if(!value.match(/\:/)) {
					        value = location.protocol + '//' + location.host + (value.match(/^\//)?value:'/' + value);
					        if($(this).attr('src')) {
					           $(this).attr('src', value);
					        } else {
					        	$(this).attr('href', value);
					        }
					     }
					});
					text = xml.xml();
					$('#content .step-complete pre').text(text);
					
					text = text.split('\n');
					for(var i in text) {
						var line = text[i];
						if(line.indexOf('==== start ') >= 0) {
							print(text, i);
						}
					}
					
					$('#content .steps .toggle > .type-html pre').snippet('html', {style:"ide-eclipse",showNum:false});
					$('#content .steps .toggle > .type-js pre').snippet('javascript', {style:"ide-eclipse",showNum:false});
				}
			});
		]]>
	</script>
</engine>
