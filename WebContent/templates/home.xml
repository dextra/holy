<?xml version="1.0" encoding="UTF-8"?>
<engine>
	<action selector="#content">
		<h3>Holy</h3>
		<div class="toogle">
			<h3>
				Intro
			</h3>
			<div>
				<p>O Holy é uma proposta inovadora e descomplicada para a construção
					de interfaces de sistemas WEB. Seu conceito fundamental é que o
					browser monte a página client-side, através de chamadas ao servidor
					para obter os dados (normalmente JSON).
				</p>
				<p>Gostamos de chamar o Holy de um “não-framework”, pela sua
					essência puramente simples!
				</p>
				<div class="toogle">
					<h3>
						WTF?
					</h3>
					<div>
						<p>Atualmente, as aplicações WEB representam uma parcela bastante
							significativa no montante de aplicações desenvolvidas e
							implantadas. Duas das grandes vantagens de se optar por este
							modelo de aplicação são:
						</p>
						<ol class="simpleBox">
							<li>fato de não demandar a sua instalação em máquinas clients
							</li>
							<li>Possibilitar o acesso remoto às informações</li>
						</ol>
						<p>O desenvolvimento de aplicações WEB, no entanto, costuma ser
							realizados utilizando frameworks específicos, de acordo com a
							plataforma empregada, para o desenvolvimento das páginas que irão
							apresentar e manipular os dados. Apesar da sensação de aumento de
							produtividade, esses frameworks costumam trazer, junto de si,
							alguns complicadores como:
						</p>
						<ul class="simpleBox">
							<li>
								<span class="highlight">Perda da usabilidade e riqueza da
									interatividade
								</span>
								, pois os recursos disponíveis são os disponibilizados pelo
								framework, e estes nem sempre são os melhores recursos para os
								usuários
							</li>
							<li>
								<span class="highlight">Consumo de processamento de servidor
									desnecessário
								</span>
								, uma vez que o servidor fica responsável por, além de processar
								os dados, trabalhar na renderização e demais controles das
								páginas a serem exibidas
							</li>
						</ul>
						<p>Com base nesses fatos, e usufruindo da intensa evolução dos
							navegadores nos últimos tempos, optamos por inovar, criando um
							mecanismo capaz de trabalhar com páginas totalmente no browser e
							deixando para o servidor apenas a responsabilidade de processar e
							manipular os dados envolvidos na aplicação
						</p>
						<p>Nesse contexto, surgiu o Holy, um “não-framework”,
							descomplicado e extremamente eficiente para a implementação de
							páginas de aplicações WEB. O Holy foi criado utilizando-se
							JavaScript e jQuery, e apresenta grandes vantagens, como por
							exemplo
						</p>
						<ul class="simpleBox">
							<li>
								Desenvolvimento de
								<span class="highlight">protótipos totalmente reaproveitáveis e
									funcionais
								</span>
							</li>
							<li>
								<span class="highlight">Ênfase na usabilidade e interatividade do
									usuário
								</span>
								com a aplicação, já que se pode utilizar todo e qualquer recurso
								e componente WEB disponível
							</li>
							<li>
								<span class="highlight">Diminuição na carga do servidor</span>
								, que passa a se ocupar apenas com o processamento de dados
							</li>
						</ul>
						<p>E, ainda, o Holy é free e open-source! Experimente e usufrua
							desse novo jeito de se desenvolver interfaces WEB!
						</p>
					</div>
				</div>
				<div class="toogle">
					<h3>
						Features
					</h3>
					<div>
						<ul class="simpleBox">
							<li>Todos os componentes são plugins do JQuery</li>
							<li>Os componentes podem ser usados separamente</li>
							<li>Pode ser usado juntamente com outros componentes do JQuery
							</li>
							<li>Suporte ao jQuery.noConflict();</li>
						</ul>
						<p>Cada componente pode ser acessado através do menu acima.</p>
					</div>
				</div>
				<div class="toogle">
					<h3>
						Great for
					</h3>
					<div>
						<ul class="simpleBox">
							<li>
								Ajax
							</li>
							<li>Single Page</li>
							<li>
								Rest/JSON
							</li>
							<li>
								JQuery
							</li>
						</ul>
					</div>
				</div>
			</div>
		</div>
	</action>
	<script>
		<![CDATA[
			var html = $('#content .toogle').html();
			html = html.replace(/Single Page/g, '<a href="http://en.wikipedia.org/wiki/Single-page_application"	target="_blank">Single Page</a>');
			html = html.replace(/Ajax/g, '<a href="http://en.wikipedia.org/wiki/Ajax_(programming)" target="_blank">Ajax</a>');
			html = html.replace(/Rest/g, '<a href="http://en.wikipedia.org/wiki/Representational_state_transfer" target="_blank">Rest</a>');
			html = html.replace(/JSON/g, '<a hrf="http://en.wikipedia.org/wiki/Json" target="_blank">JSON</a>');
			html = html.replace(/JQuery/g, '<a href="http://jquery.com/" target="_blank">JQuery</a>');
			html = html.replace(/Holy/g, '<a href="' + window.location.protocol + '//'+ window.location.host + '" target="_blank">Holy</a>');
			$('#content .toogle').html(html);
			$('#content .toogle').togglePanel();
		]]>
	</script>
</engine>